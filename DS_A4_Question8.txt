#Count subtress that sum up to a given value x in a binary tree
class TreeNode:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None

def count_subtress_with_sum(root, x):
    if root is None:
        return 0

    count_left = count_subtress_with_sum(root.left, x - root.value)
    count_right = count_subtress_with_sum(root.right, x - root.value)

    count_subtrees = count_left + count_right + (1 if root.value == x else 0)

    return count_subtrees

def main():
    root = TreeNode(10)
    root.left = TreeNode(5)
    root.right = TreeNode(15)
    root.left.left = TreeNode(2)
    root.left.right = TreeNode(7)
    root.right.left = TreeNode(12)
    root.right.right = TreeNode(17)

    x = 17

    print("The number of subtrees that sum up to", x, "is", count_subtress_with_sum(root, x))

if __name__ == "__main__":
    main()